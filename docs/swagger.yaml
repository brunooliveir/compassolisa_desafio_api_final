openapi: 3.0.1
info:
  title: API Autolocadora Compassolisa
  description: 'API de controle dos veiculos e usuários da Autolocadora Compassolisa.'
  version: 1.0.0
  contact:
    name: Bruno de Oliveira
externalDocs:
  description: Repositório do projeto
  url: https://github.com/brunooliveir/compassolisa_desafio_api_final_pt1
servers:
- url: http://127.0.0.1:3000/api/v1
  description: Servidor da aplicação
- url: http://localhost:3000/api/v1
  description: Servidor da aplicação
  
tags:
- name: "Veiculos"
  description: Rotas dos Veiculos
- name: "Usuários"
  description: Rotas dos Usuários
- name: "Locadoras"
  description: Rotas das Locadoras
- name: "Autenticação"
  description: Autenticação do Usuários


components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT 

paths:
  /car/:
    post:
      security:
        - bearerAuth: []
      tags:
      - "Veiculos"
      summary: Cadastra veiculo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                  example: "GM S10 2.8"
                cor:
                  type: string
                  example: "branco"
                ano:
                  type: number
                  example: 2000
                acessorios:
                  type: array
                  items:
                    type: object
                    properties:
                      descricao:
                        type: string
                        example: "Ar-condicionado"
                quantidadePassageiros:
                  type: number
                  example: 5
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: number
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
  
  
    get:
      security:
        - bearerAuth: []
      tags:
      - "Veiculos"
      parameters:
      - name: modelo
        in: query
        description: Modelo do veiculo
        schema:
          type: string
      
      - name: cor
        in: query
        description: Cor do veiculo
        schema:
          type: string
          
      - name: ano
        in: query
        description: Ano do veiculo
        schema:
          type: string
          
      - name: descricao
        in: query
        description: Acessórios do veiculo
        schema:
          type: string
  
      - name: quantidadePassageiros
        in: query
        description: Quantidade de passageiros
        schema:
          type: string
    
      - name: limit
        in: query
        description: limite de resultados na pagina
        schema:
          type: string

      - name: offset
        in: query
        description: quantidade de resultados ignorados após o offsets
        schema:
          type: string

      - name: offsets
        in: query
        description: quantidade de resultados ignorados a partir do primeiro resultado
        schema:
          type: string

      summary: Consulta todos os veiculos, ou veiculos por parametros
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  veiculos:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        modelo:
                          type: string
                        cor:
                          type: string
                        ano:
                          type: number
                        acessorios:
                          type: array
                          items:
                            type: object
                            properties:
                              descricao:
                                type: string
                        quantidadePassageiros:
                          type: number
                          

  /car/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: string
      required: true
    get:
      security:
        - bearerAuth: []
      tags:
      - "Veiculos"
      summary: Consulta veiculo por Id
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: number
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        404:
          description: Not found

    put:
      security:
        - bearerAuth: []
      tags:
      - "Veiculos"
      summary: Altera as propriedades de um veiculo, encontrado por Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                  example: "GM S10 2.8"
                cor:
                  type: string
                  example: "branco"
                ano:
                  type: number
                  example: 2000
                acessorios:
                  type: array
                  items:
                    type: object
                    properties:
                      descricao:
                        type: string
                        example: "Ar-condicionado"
                quantidadePassageiros:
                  type: number
                  example: 5
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: number
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        404:
          description: Not found
        400:
          description: Bad request

    delete:
      security:
        - bearerAuth: []
      tags:
      - "Veiculos"
      summary: Deleta um veiculo, encontrado por Id
      responses:
        204:
          description: No Content
        404:
          description: Not Found

  /car/{id_veiculo}/acessorios/{id_acessorios}:
    parameters:
    - name: id_veiculo
      in: path
      schema:
        type: string
      required: true
      
    - name: id_acessorios
      in: path
      schema:
        type: string
      required: true
      
    patch:
      security:
      - bearerAuth: []
      tags:
      - "Veiculos"
      summary: Adiciona ou remove acessorio do Veiculo por Id de veiculo e Id de acessorio
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
                  example: "Ar-condicionado"

      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: number
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        404:
          description: Not found
        400:
          description: Bad Request


  /people/:
    post:
      tags:
      - "Usuários"
      summary: Cadastra usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "joão ciclano"
                cpf:
                  type: string
                  example: "286.162.557-02"
                data_nascimento:
                  type: string
                  format: date
                  example: "15/05/2001"
                email:
                  type: string
                  example: "joãociclano@email.com"
                senha:
                  type: string
                  example: "senhaforteConfia"
                habilitado:
                  type: string
                  example: "sim"
                  enum:
                  - sim
                  - não
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                    format: date-time
                  email:
                    type: string
                  habilitado:
                    type: string
  
  
    get:
      tags:
      - "Usuários"
      parameters:
      - name: nome
        in: query
        description: nome do usuário
        schema:
          type: string
      
      - name: cpf
        in: query
        description: cpf do usuário
        schema:
          type: string
          
      - name: data_nascimento
        in: query
        description: data nascimento do usuário (DD.MM.YYYY)
        schema:
          type: string
          
      - name: email
        in: query
        description: email do usuário
        schema:
          type: string
  
      - name: habilitado
        in: query
        description: usuário habilitado [sim , não]
        schema:
          type: string

      - name: limit
        in: query
        description: limite de resultados na pagina
        schema:
          type: string

      - name: offset
        in: query
        description: quantidade de resultados ignorados após o offsets
        schema:
          type: string

      - name: offsets
        in: query
        description: quantidade de resultados ignorados a partir do primeiro resultado
        schema:
          type: string

      summary: Consulta todos os usuários, ou usuário por parametros
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  pessoas:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        nome:
                          type: string
                        cpf:
                          type: string
                        data_nascimento:
                          type: string
                          format: date
                        email:
                          type: string
                        habilitado:
                          type: string


                          

  /people/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: string
      required: true
    get:
      tags:
      - "Usuários"
      summary: Consulta usuários por Id
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                    format: date
                  email:
                    type: string
                  habilitado:
                    type: string

        404:
          description: Not found

    put:
      tags:
      - "Usuários"
      summary: Altera as propriedades de um usuario, encontrado por Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "joão ciclano"
                cpf:
                  type: string
                  example: "286.162.557-02"
                data_nascimento:
                  type: string
                  format: date
                  example: "15/05/2001"
                email:
                  type: string
                  example: "joãociclano@email.com"
                senha:
                  type: string
                  example: "senhaforteConfia"
                habilitado:
                  type: string
                  example: "sim"
                  enum:
                  - sim
                  - não
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                    format: date
                  email:
                    type: string
                  habilitado:
                    type: string

        404:
          description: Not found
        400:
          description: Bad request

    delete:
      tags:
      - "Usuários"
      summary: Deleta um usuario, encontrado por Id
      responses:
        204:
          description: No Content
        404:
          description: Not Found

  /authenticate/:
    post:
      tags:
      - "Autenticação"
      summary: Autentica o usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "joãociclano@email.com"
                senha:
                  type: string
                  example: "senhaforteConfia"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  email:
                    type: string
                  habilitado:
                    type: string

        404:
          description: Not found
        400:
          description: Bad request



  /rental/:
    post:
      tags:
      - "Locadoras"
      summary: Cadastra locadora
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "Localiza Rent a Car"
                cnpj:
                  type: string
                  example: "16.670.085/0001-55"
                atividades:
                  type: string
                  example: "Aluguel de Carros E Gestão de Frotas"
                endereco:
                  type: array
                  items:
                    type: object
                    properties:
                      cep:
                        type: string
                        example: "96200-200"
                      number:
                        type: string
                        example: "1234"
                      complemento:
                        type: string
                        example: "Muro A"
                      isFilial:
                        type: boolean
                        example: "true"
                        
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string
  
  
    get:
      tags:
      - "Locadoras"
      parameters:
      - name: nome
        in: query
        description: nome da locadora
        schema:
          type: string
      
      - name: cnpj
        in: query
        description: cnpj do usuário
        schema:
          type: string
          
      - name: atividades
        in: query
        description: atividades da locadora
        schema:
          type: string
          
      - name: cep
        in: query
        description: cep da locadora
        schema:
          type: string
  
      - name: logradouro
        in: query
        description: logradouro da locadora
        schema:
          type: string

      - name: complemento
        in: query
        description: complemento da locadora
        schema:
          type: string
          
      - name: bairro
        in: query
        description: bairro da locadora
        schema:
          type: string
          
      - name: number
        in: query
        description: numero de endereço da locadora
        schema:
          type: string
          
      - name: localidade
        in: query
        description: cidade da locadora
        schema:
          type: string
          
      - name: uf
        in: query
        description: uf da locadora
        schema:
          type: string
          
      - name: isFilial
        in: query
        description: Se é filial ou matriz da locadora
        schema:
          type: string

      - name: limit
        in: query
        description: limite de resultados na pagina
        schema:
          type: string

      - name: offset
        in: query
        description: quantidade de resultados ignorados após o offsets
        schema:
          type: string

      - name: offsets
        in: query
        description: quantidade de resultados ignorados a partir do primeiro resultado
        schema:
          type: string

      summary: Consulta as locadoras, ou locadoras por parametros
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  locadoras:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        nome:
                          type: string
                        cnpj:
                          type: string
                        atividades:
                          type: string
                        endereco:
                          type: array
                          items:
                            type: object
                            properties:
                              cep:
                                type: string
                              logradouro:
                                type: string
                              complemento:
                                type: string
                              bairro:
                                type: string
                              number:
                                type: string
                              localidade:
                                type: string
                              uf:
                                type: string

  /rental/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: string
      required: true
    get:
      tags:
      - "Locadoras"
      summary: Consulta locadoras por Id
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string

        404:
          description: Not found

    put:
      tags:
      - "Locadoras"
      summary: Altera as propriedades de uma locadora, encontrada por Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "Localiza Rent a Car"
                cnpj:
                  type: string
                  example: "16.670.085/0001-55"
                atividades:
                  type: string
                  example: "Aluguel de Carros E Gestão de Frotas"
                endereco:
                  type: array
                  items:
                    type: object
                    properties:
                      cep:
                        type: string
                        example: "96200-200"
                      number:
                        type: string
                        example: "1234"
                      complemento:
                        type: string
                        example: "Muro A"
                      isFilial:
                        type: boolean
                        example: "true"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string

        404:
          description: Not found
        400:
          description: Bad request

    delete:
      tags:
      - "Locadoras"
      summary: Deleta uma locadora, encontrada por Id
      responses:
        204:
          description: No Content
        404:
          description: Not Found



  
  
  
  
  